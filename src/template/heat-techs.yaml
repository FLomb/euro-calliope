techs:
    methane_boiler:
        essentials:
            name: Gas boiler
            parent: conversion_plus
            carrier_in: methane
            carrier_out: [space_heat, water_heat]
            primary_carrier_out: space_heat
        constraints:
            energy_eff: {{ heat.space_heat_techs.gas_eff }}
            lifetime: 20
        costs:  # [Danish energy agency, heating installations, 202 Natural gas boiler, 2050]
            monetary:
                energy_cap: {{ (2.7 / 10 + 2.7 / 10 + 21.1 / 400 + 15.1 / 160) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
                om_annual: {{ (0.168 / 10 + 0.168 / 10 + 0.561/ 400 + 0.374 / 160) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio

    biofuel_boiler:
        essentials:
            name: Biomass boiler
            parent: conversion_plus
            carrier_in: biofuel
            carrier_out: [space_heat, water_heat]
            primary_carrier_out: space_heat
        constraints:
            energy_eff: {{ heat.space_heat_techs.biofuel_eff }}
            lifetime: 20
        costs:  # [Danish energy agency, heating installations, 204 Biomass boiler automatic, 2050]
            monetary:
                energy_cap: {{ (5.9 / 10 + 5.9 / 8 + 76 / 400 + 45 / 160) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
                om_annual: {{ (0.42 / 10 + 0.42 / 10 + 1.343 / 400 + 0.889 / 160) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio

    ashp:
        essentials:
            name: Air source heat pump
            parent: conversion_plus
            carrier_in: electricity
            carrier_out: [space_heat, water_heat]
            primary_carrier_out: space_heat
        constraints:
            energy_eff: 1  # modelled in the carrier_ratios
            carrier_ratios:
                carrier_out:
                    space_heat: file=cop-ashp-space-heat.csv  # TODO: check if COP is what works here
                    water_heat: file=cop-ashp-water-heat.csv  # TODO: check if COP is what works here
            # TODO: Implement constraint
            energy_cap_max_time_varying:
                carrier_out:
                    space_heat: file=energy-cap-ashp-space-heat.csv
                    water_heat: file=energy-cap-ashp-water-heat.csv
            lifetime: 20
        costs:  # [Danish energy agency, heating installations, 207.3-6 Air to water, 2050]
            monetary:
                energy_cap: {{ (7.6 / 10 + 5 / 4 + 114 / 400 + 57 / 160) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
                om_annual: {{ (0.250 / 10 + 0.222 / 4 + 0.761 / 400 + 0.761 / 160) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio

    gshp:
        essentials:
            name: Ground source heat pump
            parent: conversion_plus
            carrier_in: electricity
            carrier_out: [space_heat, water_heat]
            primary_carrier_out: space_heat
        constraints:
            energy_eff: 1  # modelled in the carrier_ratios
            carrier_ratios:
                carrier_out:
                    space_heat: file=cop-gshp-space-heat.csv  # TODO: check if COP is what works here
                    water_heat: file=cop-gshp-water-heat.csv  # TODO: check if COP is what works here
            # TODO: Implement constraint
            energy_cap_max_time_varying:
                carrier_out:
                    space_heat: file=energy-cap-ashp-space-heat.csv
                    water_heat: file=energy-cap-ashp-water-heat.csv
            lifetime: 20
        costs:  # [Danish energy agency, heating installations, 207.7-10 Ground source, 2050]
            monetary:
                energy_cap: {{ (12 / 10 + 9 / 4 + 202 / 400 + 72 / 160) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
                om_annual: {{ (0.222 / 10 + 0.222 / 4 + 0.761 / 400 + 0.761 / 160) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio

    # FIXME: create capacity factor timeseries, then bring technology into existence
    solar_thermal_collector:  # [Danish energy agency, heating installations, 215 Solar heating, 2050]
        essentials:
            name: Solar thermal collector
            parent: conversion_plus
            carrier_in: solar_thermal
            carrier_out: [space_heat, water_heat]
            primary_carrier_out: space_heat
        constraints:
            energy_eff: 1  # modelled in the "solar_thermal_energy" tech
            lifetime: 30
            resource_area_per_energy_cap: {{ 6 / 4.2 + 200 / 140 }}  # m2/kW
        costs:
            monetary:
                energy_cap: {{ (2.7 / 4.2 + 2.4 / 4.2 + 1.9 / 4.2 + 67 / 140 + 60 / 140) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
                om_annual: {{ (0.05 / 4.2 + 0.05 / 4.2 + 0.05 / 4.2 + 0.17 / 140 + 0.17 / 140) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
        exists: false

    solar_thermal_energy:
        essentials:
            name: Solar thermal energy generator
            parent: supply
            carrier_out: solar_thermal
        constraints:
            resource: file=capacityfactors-solar-thermal.csv  # TODO: create timeseries
            lifetime: 20
        exists: false

    electric_heater:  # [Danish energy agency, heating installations, 216 Electric heating, 2050]
        essentials:
            name: Electrical heater
            parent: conversion_plus
            carrier_in: electricity
            carrier_out: [space_heat, water_heat]
            primary_carrier_out: space_heat
        constraints:
            energy_eff: 1
            lifetime: 30
        costs:
            monetary:
                energy_cap: {{ (2.5 / 3 + 89 / 160) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
                om_annual: {{ (0.021 / 3 + 0.042 / 160) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio

    electric_hob:
        essentials:
            name: Electric cooking element
            parent: conversion
            carrier_in: electricity
            carrier_out: cooking
        constraints:
            energy_eff: {{ heat.cooking_techs.electricity_eff }}
            lifetime: 20

    gas_hob:
        essentials:
            name: Electric cooking element
            parent: conversion
            carrier_in: methane
            carrier_out: cooking
        constraints:
            energy_eff: {{ heat.cooking_techs.gas_eff }}
            lifetime: 20

    chp_biofuel:  # [Danish energy agency, electricity and district heating, 09 biofuel Large 50C, 2050]
        essentials:
            name: Centralised combined heat and power
            parent: conversion_plus
            carrier_in: biofuel
            carrier_out: electricity
            carrier_out_2: district_heat
            primary_carrier_out: electricity
        constraints:
            energy_eff: {{ (0.265 + 0.32 + 0.282) / 3 }}  # average of chips/pellet/straw
            cb: {{ (3 + 3.3 + 2.9) / 3 }}  # back-pressure ratio, average of chips/pellet/straw
            cv: {{ (0.34 + 0.49 + 0.43) / 3 }}  # (electricity_cap - electricity_prod) / (heat_prod), average of chips/pellet/straw
            energy_cap_ratio:
                carrier_out_2.district_heat: {{ (3.13 + 2.2 + 2.49) / 3 }} # max heat (zero electricity) to max electricity (zero heat), average of 3.13/2.2/2.49 chips/pellet/straw
            lifetime: 25
        costs:
            monetary:
                energy_cap: {{ ((3.2 + 2.05 + 3.1) / 3) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity") }} | average of chips/pellet/straw
                om_annual: {{ ((0.09 + 0.058 + 0.109) / 3) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity/year") }} | average of chips/pellet/straw
                om_prod: {{ (4.7 + 1.7 + 2.1) / 3 * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_electricity") }} | average of chips/pellet/straw

    chp_biofuel_extraction:  # [Danish energy agency, electricity and district heating, 09 biofuel extraction plant, 2050]
        essentials:
            name: Centralised biofuel steam extraction turbine combined heat and power
            parent: conversion_plus
            carrier_in: biofuel
            carrier_out: electricity
            carrier_out_2: district_heat
            primary_carrier_out: electricity
        constraints:
            energy_eff: {{ (0.41 + 0.426) / 2 }}  # average of  chips/pellets
            cb: {{ (0.4 + 0.52) / 2 }}  # back-pressure ratio, average of  chips/pellets
            cv: {{ (0.13 + 0.15) / 2 }}  # (electricity_cap - electricity_prod) / (heat_prod), average of  chips/pellets
            lifetime: 25
        costs:
            monetary:
                energy_cap: {{ ((2.4 + 1.9) / 2) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity") }} | average of chips/pellets
                om_annual: {{ ((0.062 + 0.049) / 2) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity/year") }} | average of chips/pellets
                om_prod: {{ (2.6 + 1.1) / 2 * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_electricity") }} | average of chips/pellets

    chp_methane_extraction:  # [Danish energy agency, electricity and district heating, 05 Gas turb. CC, steam extraction, 2050]
        essentials:
            name: Centralised gas steam extraction turbine combined heat and power
            parent: conversion_plus
            carrier_in: methane
            carrier_out: electricity
            carrier_out_2: district_heat
            primary_carrier_out: electricity
        constraints:
            energy_eff: 0.6
            cb: 2.2  # back-pressure ratio
            cv: 0.15  # (electricity_cap - electricity_prod) / (heat_prod)
            lifetime: 25
        costs:
            monetary:
                energy_cap: {{ 0.8e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity") }}
                om_annual: {{ 0.026e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity/year") }}
                om_prod: {{ 4 * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_electricity") }}

    chp_methane_back_pressure_simple:  # [Danish energy agency, electricity and district heating, 04 Gas turb. simple cycle, L, 2050]
        essentials:
            name: Centralised gas back pressure simple cycle turbine combined heat and power
            parent: conversion_plus
            carrier_in: methane
            carrier_out: electricity
            carrier_out_2: district_heat
            primary_carrier_out: electricity
        constraints:
            carrier_ratios:
                carrier_out.electricity: 0.43
                carrier_out_2.district_heat: 1  # backpressure coefficient (electricity/heat) = 1
            lifetime: 25
        costs:
            monetary:
                energy_cap: {{ 0.52e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity") }}
                om_annual: {{ 0.018e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity/year") }}
                om_prod: {{ 4 * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_electricity") }}

    chp_methane_back_pressure_combined:  # [Danish energy agency, electricity and district heating, 05 Gas turb. CC, Back-pressure, 2050]
        essentials:
            name: Centralised gas back pressure combined cycle turbine combined heat and power
            parent: conversion_plus
            carrier_in: methane
            carrier_out: electricity
            carrier_out_2: district_heat
            primary_carrier_out: electricity
        constraints:
            carrier_ratios:
                carrier_out.electricity: 0.52  # annual average
                carrier_out_2.district_heat: 0.64  # backpressure coefficient (electricity/heat) = 1.55
            lifetime: 25
        costs:
            monetary:
                energy_cap: {{ 1.1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity") }}
                om_annual: {{ 0.026e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity/year") }}
                om_prod: {{ 4 * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_electricity") }}

    heat_storage_small:  # [Danish energy agency, energy storage, 142 small scale hot water tank, 2050]
        essentials:
            name: Small water tank (90L)
            parent: storage
            carrier: heat  # TODO: handle both heat types
        constraints:
            energy_cap_per_storage_cap_max: 6.67  # 20kW/3kWh
            storage_loss: 0.021  # %/hour
            lifetime: 30
        costs:
            monetary:
                storage_cap: {{ 0.41e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_heat") }}
                # They also give om_prod and purchase costs, but the former is in terms of storage cap

    building_heat_to_storage:
        essentials:
            name: Convert different building heat types to heat for storage
            parent: conversion_plus
            carrier_in: [heat, space_heat, water_heat]
            carrier_out: [heat, space_heat, water_heat]
            primary_carrier_in: heat
            primary_carrier_out: heat

    heat_storage_big:  # [Danish energy agency, energy storage, 141 large scale hot water tank, 2050]
        essentials:
            name: Big water tank (3000L)
            parent: storage
            carrier: district_heat
        constraints:
            energy_cap_per_storage_cap_max: 0.0166 # 2MW/175MWh
            storage_loss: 0.01  # 0.2%/day -> 0.01%/hour
            lifetime: 40
        costs:
            monetary:
                storage_cap: {{ 0.003e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_heat") }}
                # They also give om_prod and purchase costs, but the former is in terms of storage cap

    district_to_building_heat:
        essentials:
            name: Convert district to building heat
            parent: conversion_plus
            carrier_in: district_heat
            carrier_out: [space_heat, water_heat]
            primary_carrier_out: space_heat
